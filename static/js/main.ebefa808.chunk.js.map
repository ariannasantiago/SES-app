{"version":3,"sources":["components/Header.js","components/Footer.js","components/MovieInfoCard2.js","components/MovieSearchList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","title","Footer","MovieInfoCard2","useState","error","setError","isLoaded","setIsLoaded","movieTitle","setMovieTitle","movieRelease","setMovieRelease","movieRuntime","setMovieRuntime","movieGenre","setMovieGenre","movieDirector","setMovieDirector","moviePoster","setMoviePoster","movieRating","setMovieRating","movieID","encodeURIComponent","movie","useEffect","apiIdURL","process","console","log","a","fetch","then","res","json","response","Title","Released","Runtime","Genre","Director","imdbRating","Poster","catch","message","class","style","width","Card","Img","variant","src","Body","Subtitle","Text","MovieSearchList","movies","setMovies","query","setQuery","totalResults","setTotalResults","totalPages","setTotalPages","pageNum","setPageNum","resultBoolean","setresultBoolean","fetchMyAPI","searchParam","apiURL","Response","Error","pages","Math","ceil","onSubmit","e","preventDefault","htmlFor","id","type","value","onChange","target","onClick","marginLeft","map","imdbID","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebefa808.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nfunction Header(props) {\n    return (\n        <div className=\"header\">\n            {props.title}\n        </div>\n    )\n}\n\nexport default Header;","import Reach from 'react';\nimport './Footer.css';\n\nfunction Footer(props) {\n    return(\n        <div className=\"footer\">\n            {props.title}\n        </div>\n    )\n}\n\nexport default Footer;","import React, { useEffect, useState } from 'react';\nimport './MovieInfoCard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport  Card from 'react-bootstrap/Card';\n\nfunction MovieInfoCard2(props) {\n    //passes imdb id\n\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(true);\n\n    const [movieTitle, setMovieTitle] = useState('');\n    const [movieRelease, setMovieRelease] = useState(0);\n    const [movieRuntime, setMovieRuntime] = useState(0);\n    const [movieGenre, setMovieGenre] = useState('');\n    const [movieDirector, setMovieDirector] = useState('');\n    const [moviePoster, setMoviePoster] = useState('');\n    const [movieRating, setMovieRating] = useState(0);\n\n    const movieID = encodeURIComponent(props.movie);\n    const API_KEY = process.env.REACT_APP_API_KEY;\n    const NULL_POSTER_ID = process.env.REACT_APP_NULL_POSTER_URL;\n\n\n    useEffect(() => {\n        const apiIdURL = `https://www.omdbapi.com/?apikey=${API_KEY}&i=${movieID}`;\n        console.log(apiIdURL);\n\n        (async () => {\n            await fetch(apiIdURL) \n                .then(res => res.json())\n                .then (\n                    (response) => {\n                        setMovieTitle(response.Title);\n                        setMovieRelease(response.Released);\n                        setMovieRuntime(response.Runtime);\n                        setMovieGenre(response.Genre);\n                        setMovieDirector(response.Director);\n                        setMovieRating(response.imdbRating)\n                        console.log(response);\n\n                        if (response.Poster === 'N/A') {\n                            setMoviePoster(NULL_POSTER_ID);\n                        } else {\n                            setMoviePoster(response.Poster);\n                        }\n                    }\n                )\n                .catch(\n                    (error) => {\n                        setIsLoaded(false);\n                        setError(error);\n                    }\n                )\n        } ) ()\n        \n    }, [movieID])\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        return <div>Loading...</div>\n    } else {\n\n        return (\n            // <div>\n            // <li movie={movieData}>map: {movie.Title} {movie.imdbID}</li>\n            // <li movie={movieObj}>obj: {movie.Title} {movie.imdbID}</li>\n            // </div>\n\n            // <div class=\"card mb-3\" style={{maxwidth: \"10rem\"}}>\n            //       <div class=\"row g-0\">\n            //         <div class=\"col-md-4\" style={{maxwidth: \"10rem\"}}>\n            //             <Card.Img variant =\"top\" src={moviePoster}></Card.Img>\n            //         </div>\n            //         <div class=\"col-md-8\">\n            //             <Card.Body>\n            //                 <Card.Title>{movieTitle}</Card.Title>\n            //                 <Card.Subtitle className=\"mb-s text-muted\">{movieYear}</Card.Subtitle>\n            //                 <Card.Text>\n            //                 <p>\n            //                         Runtime: {movieRuntime}<br></br>\n            //                         Genre: {movieGenre}<br></br>\n            //                         Director: {movieDirector}<br></br>\n            //                         Rating: {movieRating}<br></br>\n            //                 </p>\n            //                 </Card.Text>\n            //             </Card.Body>\n            //         </div>\n            //     </div>\n            // </div>\n\n            <div class=\"card h-100 \" style = {{ width: '14rem'}}>\n                    <div><Card.Img variant =\"top\" src={moviePoster}></Card.Img></div>\n                    <Card.Body>\n                        <Card.Title>{movieTitle}</Card.Title>\n                        <Card.Subtitle className=\"mb-s text-muted\">{movieRelease}</Card.Subtitle>\n                        <Card.Text>\n                           <p>\n                                Runtime: {movieRuntime}<br></br>\n                                Genre: {movieGenre}<br></br>\n                                Director: {movieDirector}<br></br>\n                                Rating: {movieRating}<br></br>\n                            </p>\n                       </Card.Text>\n                   </Card.Body>\n            </div>\n            \n        ) \n    }\n}\n\nexport default MovieInfoCard2;","import React, { useEffect, useState } from 'react';\nimport './MovieSearchList.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MovieInfoCard2 from './MovieInfoCard2';\n\nfunction MovieSearchList() {\n    const [movies, setMovies] = useState([])\n    const [query, setQuery] = useState('');\n    const [totalResults, setTotalResults] = useState(0);\n    const [totalPages, setTotalPages] = useState(0);\n    const [pageNum, setPageNum] = useState(1);\n    const [resultBoolean, setresultBoolean] = useState(true);\n    const [error, setError] = useState(null);\n\n    function handleSumbit(e) {\n        e.preventDefault();\n        setTotalPages(0);\n        setPageNum(1);\n        fetchMyAPI();\n    }\n\n    async function fetchMyAPI () {\n        const API_KEY = process.env.REACT_APP_API_KEY;\n        const searchParam = encodeURIComponent(query)\n        console.log(searchParam);\n        const apiURL = `https://www.omdbapi.com/?apikey=${API_KEY}&s=${searchParam}&type=movie&page=${pageNum}&r=json`;\n        console.log(apiURL);\n        \n        let response = await fetch(apiURL);\n        response = await response.json();\n        \n        console.log(response);\n\n        if (response.Response === \"False\") {\n            setresultBoolean(false, console.log('Results? ', resultBoolean));\n            setError(response.Error);\n            setPageNum(1);\n            setTotalResults(0);\n        } \n        else {\n\n            setresultBoolean(true, console.log('Results? ', resultBoolean));\n\n            console.log('Search query response',response['Search']);\n            setMovies(response['Search']);\n\n            console.log('response results: ',response.totalResults);\n            setTotalResults(response.totalResults, console.log('Total Results: ', totalResults));\n\n            const pages = Math.ceil((response.totalResults)/10);\n            setTotalPages(pages, console.log('Total Pages: ', totalPages));\n\n        }\n\n    }\n\n    //2nd if-statement in nextPage and previousPage allows last/first page of results to be fetched and rendered. Used as a \"band-aid\" fix for render/fetch lag of setState(), not ideal as it re-queries existing information.\n\n    useEffect(() => {\n        if(query !== \"\") {\n            fetchMyAPI();\n        }\n    }, [pageNum]);\n\n    function nextPage() {\n        if (pageNum < totalPages) {\n            setPageNum(pageNum+1, \n                console.log('next -> current page:', pageNum));\n        }\n\n\n        console.log('next -> current page:', pageNum);\n\n    } \n\n    //hello\n\n    function previousPage() {\n        if (pageNum !== 1) {\n            setPageNum(pageNum-1,  \n            console.log('prev -> current page',pageNum)\n            );\n        }\n\n\n    }\n\n\n\n\n    return (\n        <div className=\"moviesearchlist\">\n            <section class=\"hero\">\n                <form onSubmit={handleSumbit}>\n                    <label htmlFor=\"queryInput\">Search:</label>\n                    <input\n                        id=\"queryInput\"\n                        type=\"text\"\n                        value={query}\n                        onChange={(e => setQuery(e.target.value))}\n                        />\n                    <button className=\"search\">Submit</button>\n\n                </form>\n                \n\n                <div className=\"pagebuttons\">\n                    <button onClick={previousPage} style={{marginLeft: \"0%\"}}>Previous Page</button>\n                    <button \n                        onClick={nextPage} style={{marginLeft: \"0%\"}}>Next Page \n                    </button>\n                </div>\n\n                <div>\n                    <p>Search Term: {query} <br></br>\n                    Total Results Found: {totalResults} Total Pages: {totalPages} Current Page: {pageNum}</p>\n                </div>\n\n            </section>  \n            <section className = \"searchresults\" class=\"d-flex justify-content-around\">             \n                { resultBoolean ? (\n                    <div class=\"row g-4\">                    \n                    {/* Below is a test of mapping the search results array to individual objects */}\n                        {movies.map(movie => {\n                        //movies.TotalResults coult be zero?\n                            return(\n                        // <li movie={movie} >{movie.Title} {movie.imdbID}</li>\n                        \n                        <div class=\"col\">\n                            <MovieInfoCard2 movie={movie.imdbID} key={movie.imdbID}></MovieInfoCard2>\n                        </div>\n                                )})}\n                    </div>\n                    ) : (\n                    <div>{error}</div>\n                    )\n                }\n            </section>\n\n                \n            \n\n        </div>\n    )\n}\n\nexport default MovieSearchList;","import {React} from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport MovieSearchList from './components/MovieSearchList';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header title=\"Movies\"></Header>\n      <MovieSearchList></MovieSearchList>\n      <Footer title=\"2021\"></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}